import traceback
from datetime import datetime
from typing import Optional

from aiogram import types
from aiogram.types import TelegramObject
from zoneinfo import ZoneInfo

from bot.InstanceBot import bot
from bot.logger import logger
from bot.settings import settings


async def send_error_to_developers(
    error: Exception, 
    context: str, 
    event: TelegramObject,
    additional_info: Optional[str] = None
):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        error: Exception - –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
        context: str - –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≥–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
        event: TelegramObject - –æ–±—ä–µ–∫—Ç —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        additional_info: Optional[str] - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
    """
    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        error_message = "‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏:\n\n"
        error_message += f"üî¥ –¢–∏–ø –æ—à–∏–±–∫–∏: {type(error).__name__}\n"
        error_message += f"üìù –û–ø–∏—Å–∞–Ω–∏–µ: {str(error)}\n"
        error_message += f"üìç –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}\n\n"
        
        if additional_info:
            error_message += f"‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {additional_info}\n\n"
        
        moscow_time = datetime.now(ZoneInfo("Europe/Moscow")).strftime('%Y-%m-%d %H:%M:%S')
        error_message += f"üïí –í—Ä–µ–º—è –æ—à–∏–±–∫–∏: {moscow_time}\n\n"

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if hasattr(event, "from_user"):
            user = event.from_user
            error_message += (
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} (@{user.username})\n"
            )
            error_message += f"ID: {user.id}\n\n"
        elif hasattr(event, "message") and hasattr(event.message, "from_user"):
            user = event.message.from_user
            error_message += (
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.full_name} (@{user.username})\n"
            )
            error_message += f"ID: {user.id}\n\n"

        # –î–æ–±–∞–≤–ª—è–µ–º traceback
        error_message += (
            f"üìã Traceback:\n<code>{traceback.format_exc()}</code>"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
        for DEV_CHAT_ID in settings.DEV_CHAT_IDS:
            await bot.send_message(DEV_CHAT_ID, error_message)
            
    except Exception as send_error:
        logger.error(
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º: {send_error}",
        )


async def send_error_to_developers_with_callback(
    error: Exception, 
    context: str, 
    call: types.CallbackQuery,
    additional_info: Optional[str] = None
):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –¥–ª—è callback query —Å–æ–±—ã—Ç–∏–π.
    
    Args:
        error: Exception - –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
        context: str - –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≥–¥–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
        call: types.CallbackQuery - –æ–±—ä–µ–∫—Ç –≤—ã–∑–æ–≤–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        additional_info: Optional[str] - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ
    """
    await send_error_to_developers(error, context, call, additional_info) 