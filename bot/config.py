"""
–§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞, —Ç–∞–∫–∏—Ö –∫–∞–∫:
- ID Runpod —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Runpod, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Å—Ç–∏—Ç—Å—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.
–ö–∞–∂–¥—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ.

- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø—É—Ç–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π

- –•–µ–¥–µ—Ä—ã –∏ —É—Ä–ª—ã –∑–∞–ø—Ä–æ—Å–æ–≤

- ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

- –û–±—â–∏–π –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–º–ø—Ç
"""

import os

from dotenv import load_dotenv
from logger import logger

# ID —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–¥–ª—è –∫–∞–∂–¥–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–≤–æ—è)
SETTING_1_ENDPOINT_ID = "idxmpy4kkpl9d1"
SETTING_2_ENDPOINT_ID = "vmoqasbdvt7wl6"
SETTING_3_ENDPOINT_ID = "e2u67i0khvang0"
SETTING_4_ENDPOINT_ID = "if2vaadpx2bo1u"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –ø—É—Ç–µ–π –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
env_path = os.path.join(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))), "FocuuusBot", ".env")
logger.info(f"–ü—É—Ç—å –∫ .env —Ñ–∞–π–ª—É: {env_path}")
logger.info(f"–§–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(env_path)}")

# –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å .env —Ñ–∞–π–ª–æ–º
variables_to_clear = ["BOT_API_TOKEN", "RUNPOD_API_KEY", "KLING_API_KEY"]
for var in variables_to_clear:
    if var in os.environ:
        logger.info(f"–£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è: {var}")
        del os.environ[var]

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ñ–∞–π–ª —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º
if os.path.exists(env_path):
    load_dotenv(env_path, override=True)
    logger.info("‚úÖ .env —Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
    bot_token = os.getenv("BOT_API_TOKEN")
    runpod_key = os.getenv("RUNPOD_API_KEY")
    kling_key = os.getenv("KLING_API_KEY")

    logger.info(f"BOT_API_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω: {'–î–∞' if bot_token else '–ù–µ—Ç'}")
    logger.info(f"RUNPOD_API_KEY –∑–∞–≥—Ä—É–∂–µ–Ω: {'–î–∞' if runpod_key else '–ù–µ—Ç'}")
    logger.info(f"KLING_API_KEY –∑–∞–≥—Ä—É–∂–µ–Ω: {'–î–∞' if kling_key else '–ù–µ—Ç'}")

    if bot_token:
        logger.info(f"–¢–æ–∫–µ–Ω –±–æ—Ç–∞: {bot_token[:10]}...{bot_token[-10:] if len(bot_token) > 20 else '***'}")
else:
    logger.warning(f"‚ö†Ô∏è .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {env_path}")

TEMP_IMAGE_FILES_DIR = os.path.join(BASE_DIR, "bot", "temp", "images")

FACEFUSION_DIR = os.path.join(os.path.dirname(BASE_DIR), "facefusion-docker")

TEMP_FOLDER_PATH = os.path.join(FACEFUSION_DIR, ".assets", "images", "temp")

VIDEOS_TEMP_DIR = os.path.join(BASE_DIR, "bot", "temp", "videos")

PROCESS_IMAGE_TASK = "process_image"
PROCESS_VIDEO_TASK = "process_video"
PROCESS_IMAGE_BLOCK_TASK = "process_image_block"

FACEFUSION_RESULTS_DIR = os.path.join(
    FACEFUSION_DIR,
    ".assets",
    "images",
    "results",
)

TEMP_DIR = os.path.join(BASE_DIR, "temp")


def get_runpod_headers() -> dict:
    """Get headers for Runpod API requests with validation."""
    api_key = os.getenv("RUNPOD_API_KEY")
    if not api_key:
        raise ValueError("RUNPOD_API_KEY environment variable is not set")
    return {
        "Content-Type": "application/json",
        "Authorization": api_key,
    }


def get_kling_headers() -> dict:
    """Get headers for kling API requests with validation."""
    api_key = os.getenv("KLING_API_KEY")
    if not api_key:
        raise ValueError("KLING_API_KEY environment variable is not set")
    return {
        "Accept": "application/json",
        "Authorization": f"Bearer {api_key}",
    }


def get_current_tokens():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Ç–æ–∫–µ–Ω—ã —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π."""
    bot_token = os.getenv("BOT_API_TOKEN")
    runpod_key = os.getenv("RUNPOD_API_KEY")
    kling_key = os.getenv("KLING_API_KEY")

    logger.info("üîç –¢–µ–∫—É—â–∏–µ —Ç–æ–∫–µ–Ω—ã:")
    logger.info(f"BOT_API_TOKEN: {bot_token[:10]}...{bot_token[-10:] if bot_token and len(bot_token) > 20 else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
    logger.info(f"RUNPOD_API_KEY: {runpod_key[:10]}...{runpod_key[-10:] if runpod_key and len(runpod_key) > 20 else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")
    logger.info(f"KLING_API_KEY: {kling_key[:10]}...{kling_key[-10:] if kling_key and len(kling_key) > 20 else '–ù–µ –Ω–∞–π–¥–µ–Ω'}")

    return {
        "BOT_API_TOKEN": bot_token,
        "RUNPOD_API_KEY": runpod_key,
        "KLING_API_KEY": kling_key,
    }


# URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ Runpod
RUNPOD_HOST = "https://api.runpod.ai/v2"

# ID —á–∞—Ç–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
DEV_CHAT_IDS = [1979922062, 5046166133]

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞
ALLOWED_USERS = [
    6455916237,
    885831766,
    835641645,
    196507796,
    930038985,
    722063648,
    5948408400,
    1979922062,
    5046166133,
    866512502,
    7313424156,
    7687069152,
    7787997166,
    7515433330,
    418325928,
]

# –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –±–æ—Ç–∞
ADMIN_ID = 5046166133

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—â–∏–π –Ω–µ–≥–∞—Ç–∏–≤ –ø—Ä–æ–º–ø—Ç
COMMON_NEGATIVE_PROMPT = (
    "score_6, score_5, score_4, Negative_&_Positive_Embeddings_By_Stable_Yogi, negative_hand, pony, negativeXL_D, "
    "low quality, oversaturated, disfigured, poorly, bad, wrong, mutated, worst quality, normal quality, ugly face, "
    "mutated hands, extra fingers, poorly drawn hands, fused fingers, too many fingers, long neck, bad hands, text, "
    "signature, signature artist, multiple female, multiple male, bad anatomy, low res, blurry face, blurry eyes, "
    "tiny hands, tiny feet, multiple women, disproportionately large head, disproportionately long torso, six fingers, "
    "low quality hands, hat, multicolored hair, pubic hair, asian, tan lines, makeup, lipstick, playing cards, black skin, "
    "steering wheel, man, naked nipples, naked breasts, cartoon, anime, 3d, cgi, illustration, doll-like, overly muscular, "
    "chubby, plastic skin, waxy texture, blurry, jpeg artifacts, extra limbs, distorted proportions, unnatural face, "
    "unrealistic anatomy, deformed eyes, exaggerated curves, barbie face, uncanny valley, big head, overexposed, "
    "underexposed, low-quality shading, unnatural smile, bad anatomy, ugly, distorted face, extra limbs, blurry, "
    "low quality child, children, kid, toddler, baby, minor, teenager, young girl, young boy, childlike, underage, "
    "preteen, infant, (((spread legs))), spread legs, open legs, legs apart, legs wide open, legs spread, "
    "no spread legs, no open legs, no legs apart, no legs wide open, no legs spread"
)
